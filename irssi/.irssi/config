#░▀█▀░█▀▄░█▀▀░█▀▀░▀█▀░░
#░░█░░█▀▄░▀▀█░▀▀█░░█░░░
#░▀▀▀░▀░▀░▀▀▀░▀▀▀░▀▀▀░░

utf8 = "on";

servers = (
  {
    address = "pyratebouncer";
    chatnet = "unixchat";
    password = "";
    port = "1666";
    use_tls = "no";
    tls_verify = "no";
    autoconnect = "yes";
  },
  {
    address = "pyratebouncer";
    chatnet = "libera";
    password = "";
    port = "1666";
    use_tls = "no";
    tls_verify = "no";
    autoconnect = "yes";
  },
  {
    address = "pyratebouncer";
    chatnet = "rizon";
    password = "";
    port = "1666";
    use_tls = "no";
    tls_verify = "no";
    autoconnect = "yes";
  },
  {
    address = "pyratebouncer";
    chatnet = "snoonet";
    password = "";
    port = "1666";
    use_tls = "no";
    tls_verify = "no";
    autoconnect = "yes";
  },
  {
    address = "pyratebouncer";
    chatnet = "geekshed";
    password = "";
    port = "1666";
    use_tls = "no";
    tls_verify = "no";
    autoconnect = "yes";
  },
  {
    address = "pyratebouncer";
    chatnet = "quakenet";
    password = "";
    port = "1666";
    use_tls = "no";
    tls_verify = "no";
    autoconnect = "no";
  },
  {
    address = "pyratebouncer";
    chatnet = "undernet";
    password = "";
    port = "1666";
    use_tls = "no";
    tls_verify = "no";
    autoconnect = "yes";
  },
  {
    address = "pyratebouncer";
    chatnet = "darkscience";
    password = "";
    port = "1666";
    use_tls = "no";
    tls_verify = "no";
    autoconnect = "yes";
  },
  {
    address = "pyratebouncer";
    chatnet = "bitreich";
    password = "";
    port = "1666";
    use_tls = "no";
    tls_verify = "no";
    autoconnect = "no";
  },
  {
    address = "pyratebouncer";
    chatnet = "oftc";
    password = "";
    port = "1666";
    use_tls = "no";
    tls_verify = "no";
    autoconnect = "yes";
  },
  {
    address = "pyratebouncer";
    chatnet = "blitzed";
    password = "";
    port = "1666";
    use_tls = "no";
    tls_verify = "no";
    autoconnect = "yes";
  },
  {
    address = "pyratebouncer";
    chatnet = "ircd";
    password = "";
    port = "1666";
    use_tls = "no";
    tls_verify = "no";
    autoconnect = "yes";
  }
);

chatnets = {
  unixchat = { type = "IRC"; nick = "pyrate"; };
  libera = { type = "IRC"; nick = "pyratebeard"; };
  rizon = { type = "IRC"; nick = "pyratebeard"; };
  snoonet = { type = "IRC"; nick = "pyratebeard"; };
  geekshed = { type = "IRC"; nick = "pyratebeard"; };
  quakenet = { type = "IRC"; nick = "pyratebeard"; };
  undernet = { type = "IRC"; nick = "pyratebeard"; };
  darkscience = { type = "IRC"; nick = "pyratebeard"; };
  blitzed = { type = "IRC"; nick = "pyratebeard"; };
  bitreich = { type = "IRC"; nick = "pyratebeard"; };
  oftc = { type = "IRC"; nick = "pyratebeard"; };
};

channels = (
	{ name = "#unix"; chatnet = "unixchat"; autojoin = "Yes"; }
);

aliases = {
  emote = "exec -o emote";
  ascii = "exec -o toilet -f future --irc";
  rusto = "exec -o toilet -f rusto --irc";
  rustofat = "exec -o toilet -f rustofat --irc";
  gay = "exec -o toilet -f term --gay --irc";
  toilet = "exec -o toilet";
};

settings = {
  core = {
    real_name = "pyratebeard";
    user_name = "pyratebeard";
    nick = "pyratebeard";
    timestamp_format = "%H:%M";
  };
  "fe-text" = {
    actlist_sort = "refnum";
    term_force_colors = "yes";
    indent = "13";
  };
  "fe-common/core" = {
    theme = "mutiny2.theme";
    autolog_path = "/var/log/irc/$tag/$0.log";
    autolog = "yes";
    hilight_nick_matches_everywhere = "yes";
  };
  "perl/core/scripts" = {
    splitlong_max_length = "60";
    awl_viewer = "no";
    awl_placement = "top";
    awl_shared_sbar = "OFF";
    awl_detach = "(status)";
    awl_sort = "server";
    awl_block = "15";
    fancy_abbrev = "head";
  };
};
logs = { };
statusbar = {
  items = {
    barstart = "{sbstart}";
    barend = "{sbend}";
    topicbarstart = "{topicsbstart}";
    topicbarend = "{topicsbend}";
    time = "{sb $Z}";
    user = "{sb {sbnickmode $cumode}$N{sbmode $usermode}{sbaway $A}}";
    window = "{sb $winref:$tag/$itemname{sbmode $M}}";
    window_empty = "{sb $winref{sbservertag $tag}}";
    topic = " $topic";
    lag = "{sb Lag: $0-}";
    act = "{sb Act: $0-}";
  };
  default = {
    window = {
      disabled = "yes";

      # window, root
      type = "window";
      # top, bottom
      placement = "bottom";
      # number
      position = "1";
      # active, inactive, always
      visible = "active";

      # list of items in statusbar in the display order
      items = {
        barstart = { priority = "100"; };
        time = { };
        user = { };
        window = { };
        window_empty = { };
        lag = { priority = "-1"; };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # statusbar to use in inactive split windows
    window_inact = {
      type = "window";
      placement = "bottom";
      position = "1";
      visible = "inactive";
      items = {
        barstart = { priority = "100"; };
        window = { };
        window_empty = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.
    prompt = {
      type = "root";
      placement = "bottom";
      # we want to be at the bottom always
      position = "100";
      visible = "always";
      items = {
        prompt = { priority = "-1"; };
        prompt_empty = { priority = "-1"; };
        # treated specially, this is the real input line.
        input = { priority = "10"; };
      };
    };

    # topicbar
    topic = {
      type = "root";
      placement = "top";
      position = "0";
      visible = "inactive";
      items = {
        topicbarstart = { priority = "100"; };
        topic_empty = { };
        topicbarend = { priority = "100"; alignment = "right"; };
      };
      disabled = "yes";
    };
    awl_0 = {
      placement = "top";
      items = {
        barstart = { priority = "100"; };
        awl_0 = { };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
  };
};
keyboard = (
  { key = "meta-z"; id = "previous_window"; data = ""; },
  { key = "meta-x"; id = "next_window"; data = ""; }
);
