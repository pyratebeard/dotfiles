#!/bin/sh
#
# cmus-status-display
#
# Usage:
#   in cmus command ":set status_display_program=cmus-status-display"
#
# This scripts is executed by cmus when status changes:
#   cmus-status-display key1 val1 key2 val2 ...
#
# All keys contain only chars a-z. Values are UTF-8 strings.
#
# Keys: status file url artist album discnumber tracknumber title date
#   - status (stopped, playing, paused) is always given
#   - file or url is given only if track is 'loaded' in cmus
#   - other keys/values are given only if they are available
#

output()
{
	# write status to ~/cmus-status.txt (not very useful though)
	echo "$*" >> ~/.config/cmus/wmt.txt 2>&1

	# WMI (http://wmi.modprobe.de/)
	#wmiremote -t "$*" &> /dev/null
}

while test $# -ge 2
do
	eval _$1='$2'
	shift
	shift
done

if test -n "$_file" && test -n "$_title" && [[ "$_status" == "playing" ]] ; then
	if [[ $(cmus-remote -Q | grep "set play_library" | awk '{print $NF}') == "false" ]] ; then
		_underscore=$(echo $_title | sed 's/\ /_/g')
		_playlist=$(grep -i -e "$_title\|$_underscore" ~/.config/cmus/playlists/* | awk -F: '{print $1}' | awk -F/ '{print $NF}' | head -n1)
		test -n "$_playlist" && output "custom $_playlist playlist"
	elif [[ $(cmus-remote -Q | grep "set play_library" | awk '{print $NF}') == "true" ]] ; then
		output "$_album by $_artist"
	fi
	#output "[$_status] $_artist - $_album - $_title ($_date) $duration"
elif test -n "$_url" && [[ "$_status" == "playing" ]] ; then
	output "$_url"
fi
